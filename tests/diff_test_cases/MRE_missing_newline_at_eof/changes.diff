diff --git a/test.py b/test.py
--- a/test.py
+++ b/test.py
@@ -35,4 +35,26 @@ def calculate_median(numbers):
         return (middle1 + middle2) / 2
     else:
         # Odd number of elements
-        return sorted_numbers[count // 2]
\ No newline at end of file
+        return sorted_numbers[count // 2]
+
+def calculate_mode(numbers):
+    """
+    Calculate the mode (most common value) of a list of numbers.
+    
+    Args:
+        numbers: List of numbers
+        
+    Returns:
+        Mode value or None if the list is empty
+    """
+    if not numbers:
+        return None
+    
+    # Count occurrences of each number
+    counts = {}
+    for num in numbers:
+        counts[num] = counts.get(num, 0) + 1
+    
+    # Find the number with the highest count
+    max_count = 0
+    mode = None
+    
+    for num, count in counts.items():
+        if count > max_count:
+            max_count = count
+            mode = num
+    
+    return mode
